# -*- coding: utf-8 -*-
"""EFIMOV_KALASHNIKOV_projectors_step5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XRNX8UCmlWIYLYImZQU_1yrw-7AVMxTo
"""

import math
# использовал только для вычисления корня 
a = list = []

print("Введите элементы строки")

for i in range(2):
  print("Строка:", i+1)
  a0 = input()
  b = a0.split(" ")
  a.append(b)
  for i in range(2):
    b[i] = int(b[i])

lam1 = (a[0][0]+a[1][1]+math.sqrt((a[0][0]+a[1][1])*(a[0][0]+a[1][1])-4*(a[0][0]*a[1][1]-a[0][1]*a[1][0])))/2
lam2 = (a[0][0]+a[1][1]-math.sqrt((a[0][0]+a[1][1])*(a[0][0]+a[1][1])-4*(a[0][0]*a[1][1]-a[0][1]*a[1][0])))/2

lams = list = []


# print("Собственные значения:")

lams.append(lam1)
lams.append(lam2)
# print(lams)

# 
xy = list = []
b = list = []
# lams
for i in range(2):
  l = lams[i]
  if a[0][0]-l == 0 and a[0][1] == 0:
    if a[1][0] != 0 and a[1][1] != 0:
      c = -1*(a[1][0])/(a[1][1]-l)
      b.append(1)
      b.append(c)
      xy.append(b)
      b = list = []
      break
    elif a[1][0] == 0:
      b.append(1)
      b.append(0)
      xy.append(b)
      b = list = []
      break
    elif a[1][1] == 0:
      b.append(0)
      b.append(1)
      xy.append(b)
      b = list = []
      break
  
  if a[1][0] == 0 and a[1][1]-l == 0:
    if a[0][0]-l != 0 and a[0][1] != 0:
      c = -1*(a[0][0]-l)/(a[0][1])
      b.append(1)
      b.append(c)
      xy.append(b)
      b = list = []
      break
    elif a[0][0] == 0:
      b.append(1)
      b.append(0)
      xy.append(b)
      b = list = []
      break
    elif a[0][1] == 0:
      b.append(0) 
      b.append(1)
      xy.append(b)
      b = list = []
      break
  c = -1*((a[0][0]-l+a[1][0])/(a[0][1]+a[1][1]-l))
  b.append(1)
  b.append(c)
  xy.append(b)
  b = list = []
# print("Вектора:")
# print(xy)

def tr(b): 
  a = list = [] 
  for i in range(2):
    a.append([b[i][i]])
  
  a[0].append(b[1][0])
  a[1] = []
  a[1].append(b[0][1])
  a[1].append(b[1][1])
  return a

v = tr(xy)
# print(v)
det = v[0][0]*v[1][1]-v[0][1]*v[1][0]

new = list = [[v[1][1]/det, -1*v[1][0]/det], [-1*v[0][1]/det, v[0][0]/det]] #обратная матрица к матрице собственных векторов
new = tr(new)

# print(new)
# print(v)

proectors = list = []

def perem(a, b, i):
  pr = []
  pr.append([a[0][i]*b[i][0], a[0][i]*b[i][1]])
  pr.append([a[1][i]*b[i][0], a[1][i]*b[i][1]])
  return pr

for i in range(2):
  proectors.append(perem(v, new, i))

for i in range(2):
  print("Проектор №", i+1)
  print(proectors[i])

