type
  matrix = array[1..999, 1..999] of integer;

var
  A, B: matrix;
  i, j, det, m, n: integer;

procedure GetMatr(A: matrix; var B: matrix; m, i, j: integer);
{ Вычеркивание из матрицы строки и столбца }
var
  ki, kj, di, dj: integer;
begin
  di := 0;
  for ki := 1 to m - 1 do
  begin
    if (ki = i) then di := 1;
    dj := 0;
    for kj := 1 to m - 1 do
    begin
      if (kj = j) then dj := 1;
      b[ki, kj] := a[ki + di, kj + dj];
    end;
  end;
end;

function Determinant(A: matrix; n: integer): integer;
{ Вычисление определителя матрицы }
var
  i, j, d, k: longint;
  B: matrix;
begin
  d := 0; k := 1;
  if (n < 1) then
  begin
    writeln('Размерность не подходит, N=', n); halt;
  end;
  if (n = 1)
    then d := a[1, 1]
  else if (n = 2)
    then d := a[1, 1] * a[2, 2] - a[2, 1] * a[1, 2]
  else { n>2 }
    for i := 1 to n do
    begin
      GetMatr(a, b, n, i, 1);
      d := d + k * a[i, 1] * Determinant(b, n - 1);
      k := -k;
    end;
  Determinant := d;
end;

begin
  print('введите размерность 1 матрицы:');
  read(n);
  read(m);
  writeln('Введите матрицу:');
  writeln();
  for i := 1 to n do
    for j := 1 to m do
      read(A[i, j]);  
  {ввод матрицы}
  writeln;
  for i := 1 to n do
  begin
    for j := 1 to m do
      write(A[i, j], ' ');
    writeln();
  end;
  writeln();
  {вывод матрицы}
  if n = m then
  begin
    writeln('Матрица имеет определитель и может быть транспонирована');
    det := Determinant(a, n);
    writeln('Determinant=', det);
    writeln();
    if det <> 0 then
    begin
      writeln('Транспонированная матрица:');
      for i := 1 to n do
      begin
        for j := 1 to m do
          B[i, j] := A[j, i];  
        {транспонированная матрица}
      end;
      writeln();
      for i := 1 to n do
      begin
        for j := 1 to m do
          write(B[i, j], ' ');
        writeln();
      end;
    end;
  end
  else
    writeln('Размерность не подходит для нахождения определителя')
end.
